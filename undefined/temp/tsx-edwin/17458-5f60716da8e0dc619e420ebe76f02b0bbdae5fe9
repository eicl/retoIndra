{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var appointment_exports={};__export(appointment_exports,{handler:()=>handler});module.exports=__toCommonJS(appointment_exports);var import_AppointmentService=require(\"../domain/services/AppointmentService\");var import_DynamoDBRepository=require(\"../infrastructure/db/DynamoDBRepository\");var import_SNSService=require(\"../infrastructure/messaging/SNSService\");const snsService=new import_SNSService.SNSService;const appointmentService=new import_AppointmentService.AppointmentService(new import_DynamoDBRepository.DynamoDBRepository,snsService);const handler=__name(async event=>{try{console.log({event});const requestBody=JSON.parse(event.body||\"{}\");console.log({requestBody});console.log({requestBody});const{insuredId,scheduleId,countryISO}=requestBody;const appointment={insuredId,scheduleId,countryISO,status:\"pending\"};console.log({appointment});await appointmentService.createAppointment(appointment);if(snsService){await snsService.send(appointment)}return{statusCode:200,body:JSON.stringify({message:\"Cita agendada correctamente y en proceso\",status:\"pending\"})}}catch(error){console.error(\"Error al agendar cita:\",error);return{statusCode:500,body:JSON.stringify({message:\"Error interno al procesar la solicitud\",error:error.message})}}},\"handler\");0&&(module.exports={handler});\n})()\n","warnings":[],"map":{"version":3,"mappings":";suBAAA,gIACA,8BAAmC,iDACnC,8BAAmC,mDACnC,sBAA2B,kDAI3B,MAAM,WAAa,IAAI,6BAEvB,MAAM,mBAAqB,IAAI,6CAC7B,IAAI,6CACJ,UACF,EAEO,MAAM,QAAkC,aAAO,OAAU,CAC9D,GAAI,CACF,QAAQ,IAAI,CAAC,KAAK,CAAC,EAEnB,MAAM,YAAc,KAAK,MAAM,MAAM,MAAQ,IAAI,EACjD,QAAQ,IAAI,CAAC,WAAW,CAAC,EACzB,QAAQ,IAAI,CAAC,WAAW,CAAC,EACzB,KAAM,CAAE,UAAW,WAAY,UAAW,EAAI,YAG9C,MAAM,YAA2B,CAC/B,UACA,WACA,WACA,OAAQ,SAEV,EAEA,QAAQ,IAAI,CAAC,WAAW,CAAC,EAGzB,MAAM,mBAAmB,kBAAkB,WAAW,EAGtD,GAAI,WAAY,CACd,MAAM,WAAW,KAAK,WAAW,CACnC,CAEA,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CACnB,QAAS,2CACT,OAAQ,SACV,CAAC,CACH,CACF,OAAS,MAAO,CACd,QAAQ,MAAM,yBAA0B,KAAK,EAC7C,MAAO,CACL,WAAY,IACZ,KAAM,KAAK,UAAU,CACnB,QAAS,yCACT,MAAO,MAAM,OACf,CAAC,CACH,CACF,CACF,EA7C+C","names":[],"ignoreList":[],"sources":["C:\\practicas\\fuentes\\medical-appointment-backend\\src\\lambdas\\appointment.ts"],"sourcesContent":[null]}}